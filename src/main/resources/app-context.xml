<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <!--  <constructor-arg ref="httpRequestFactory"/>-->
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="castorMarshaller"/>
                    <property name="unmarshaller" ref="castorMarshaller"/>
                    <property name="supportedMediaTypes">
                        <list>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg index="0" value="application"/>
                                <constructor-arg index="1" value="xml"/>
                            </bean>
                        </list>
                    </property>
                </bean>                
            </list>
        </property>    
    </bean>
    
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation" value="classpath:oxm-mapping.xml"/>
    </bean>
    
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:schema.sql"/>
        <jdbc:script location="classpath:data.sql"/>
    </jdbc:embedded-database>
    
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="springSessionFactory"/>
    </bean>    
    
	<tx:annotation-driven/>
	<context:component-scan base-package="nz.co.tommyngo.se325assignment1" />
	
	<context:annotation-config />
        
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> 
	<bean id="springSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/> 
		<property name="packagesToScan" value="nz.co.tommyngo.se325assignment1"/> 
		<property name="hibernateProperties"> 
			<props> 
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> 
				<prop key="hibernate.max_fetch_depth">3</prop> 
				<prop key="hibernate.jdbc.fetch_size">50</prop> 
				<prop key="hibernate.jdbc.batch_size">10</prop> 
				<prop key="hibernate.show_sql">true</prop> 
			</props> 
		</property>
	</bean>
	<bean id="bugDao" class="nz.co.tommyngo.se325assignment1.hibernate.persistence.BugTrackingDaoImpl">
	
	</bean>
	<bean id="projectDao" class="nz.co.tommyngo.se325assignment1.hibernate.persistence.BugProjectDaoImpl">
	
	</bean>
	<bean id="assigneeDao" class="nz.co.tommyngo.se325assignment1.hibernate.persistence.BugAssigneeDaoImpl">
	
	</bean>
</beans>